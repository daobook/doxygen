digraph "ExpressionParser"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="ExpressionParser",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Recursive decent parser for Django style template expressions."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_curToken" ,fontname="Helvetica"];
  Node2 [label="ExpressionParser::ExprToken",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d2a/class_expression_parser_1_1_expr_token.html",tooltip="Class representing a token within an expression."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" id" ,fontname="Helvetica"];
  Node3 [label="QCString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d45/class_q_c_string.html",tooltip="This is an alternative implementation of QCString."];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_parser" ,fontname="Helvetica"];
  Node4 [label="TemplateParser",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d25/class_template_parser.html",tooltip="Parser for templates"];
  Node3 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_templateName" ,fontname="Helvetica"];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_engine" ,fontname="Helvetica"];
  Node5 [label="TemplateEngine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d1d/class_template_engine.html",tooltip="Engine to create templates and template contexts."];
}

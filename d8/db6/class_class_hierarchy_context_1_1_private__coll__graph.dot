digraph "ClassHierarchyContext::Private"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ClassHierarchyContext\l::Private",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_diagrams" ,fontname="Helvetica"];
  Node2 [label="CachedItem\< TemplateVariant,\l ClassHierarchyContext::\lPrivate, &Private::createDiagrams \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc1/class_cached_item.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_item" ,fontname="Helvetica"];
  Node3 [label="TemplateVariant",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dba/class_template_variant.html",tooltip="Variant type which can hold one value of a fixed set of types."];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_variant" ,fontname="Helvetica"];
  Node4 [label="Variant\< bool, int,\l QCString, TemplateStructIntf\lPtr, TemplateListIntfPtr,\l FunctionDelegate, TemplateStructIntf\lWeakPtr \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d1e/struct_variant.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< bool, int, QCString,\l TemplateStructIntfPtr,\l TemplateListIntfPtr, Function\lDelegate, TemplateStructIntfWeakPtr \>" ,fontname="Helvetica"];
  Node5 [label="Variant\< Ts \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d1e/struct_variant.html",tooltip="Implementation of a variant container (similar to C++17's std::variant)."];
  Node6 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TemplateVariant,\l ClassHierarchyContext\l::Private, &Private::createDiagrams \>" ,fontname="Helvetica"];
  Node6 [label="CachedItem\< T, TOwner,\l creator \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc1/class_cached_item.html",tooltip="Wrapper for data that needs to be cached."];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_preferredDepth" ,fontname="Helvetica"];
  Node7 [label="CachedItem\< int, ClassHierarchy\lContext::Private, &Private\l::createPreferredDepth \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc1/class_cached_item.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< int, ClassHierarchyContext\l::Private, &Private::createPreferred\lDepth \>" ,fontname="Helvetica"];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" s_inst" ,fontname="Helvetica"];
  Node8 [label="PropertyMap\< ClassHierarchy\lContext::Private \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_property_map.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ClassHierarchyContext\l::Private \>" ,fontname="Helvetica"];
  Node9 [label="PropertyMap\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_property_map.html",tooltip="Class representing a mapping of properties and the corresponding getter function."];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_maxDepth" ,fontname="Helvetica"];
  Node10 [label="CachedItem\< int, ClassHierarchy\lContext::Private, &Private\l::createMaxDepth \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc1/class_cached_item.html",tooltip=" "];
  Node6 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< int, ClassHierarchyContext\l::Private, &Private::createMaxDepth \>" ,fontname="Helvetica"];
}
